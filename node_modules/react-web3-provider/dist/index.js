'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withWeb3 = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _web = require('web3');

var _web2 = _interopRequireDefault(_web);

var _hoistNonReactStatics = require('hoist-non-react-statics');

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Web3Context = _react2.default.createContext(null);

var Web3Provider = function (_React$Component) {
  _inherits(Web3Provider, _React$Component);

  function Web3Provider(props) {
    _classCallCheck(this, Web3Provider);

    var _this = _possibleConstructorReturn(this, (Web3Provider.__proto__ || Object.getPrototypeOf(Web3Provider)).call(this, props));

    _this.state = {
      web3: null,
      connection: {
        connected: false,
        isLoading: true,
        error: null
      }
    };
    return _this;
  }

  _createClass(Web3Provider, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      this.tryProvider(window.web3, function () {
        return _this2.tryProvider(_web2.default.givenProvider, function () {
          // Web3 fallback -- always accept
          if (_this2.props.defaultProvider) {
            _this2.props.defaultProvider(_this2.setWeb3.bind(_this2));
          }

          // Breaking changes in MetaMask => see: https://medium.com/metamask/https-medium-com-metamask-breaking-change-injecting-web3-7722797916a8
          // Listen for provider injection
          window.addEventListener('message', function (_ref) {
            var data = _ref.data;

            if (data && data.type && data.type === 'ETHEREUM_PROVIDER_SUCCESS') {
              _this2.tryProvider(window.ethereum);
            }
          });

          // Request provider
          window.postMessage({ type: 'ETHEREUM_PROVIDER_REQUEST' }, '*');
        });
      });
    }
  }, {
    key: 'setWeb3',
    value: function setWeb3(web3) {
      var _this3 = this;

      this.setState({ web3: new _web2.default(web3) }, function () {
        _this3.state.web3.eth.net.isListening().then(function () {
          return _this3.setState({
            connection: {
              isConnected: true,
              isLoading: false,
              error: null
            }
          });
        }).catch(function (error) {
          return _this3.setState({
            connection: {
              isConnected: false,
              isLoading: false,
              error: error
            }
          });
        });
      });
    }
  }, {
    key: 'tryProvider',
    value: function tryProvider(web3) {
      var _this4 = this;

      var next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      if (web3) {
        var web3Wrapper = new _web2.default(web3);
        if (this.props.acceptProvider) this.props.acceptProvider(web3Wrapper, function () {
          return _this4.setWeb3(web3Wrapper);
        }, next);else this.setWeb3(web3Wrapper);
      } else if (next) next();else throw Error('Unexpected Web3 error.');
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          web3 = _state.web3,
          connection = _state.connection;

      if (this.props.loading && connection.isLoading) {
        return this.props.loading;
      } else if (this.props.error && connection.error) {
        return this.props.error(connection.error);
      }

      return _react2.default.createElement(
        Web3Context.Provider,
        {
          value: {
            web3: web3,
            connection: this.state.connection
          }
        },
        this.props.children
      );
    }
  }]);

  return Web3Provider;
}(_react2.default.Component);

Web3Provider.propTypes = {
  children: _propTypes2.default.node.isRequired,
  defaultProvider: _propTypes2.default.func,
  acceptProvider: _propTypes2.default.func,
  loading: _propTypes2.default.node,
  error: _propTypes2.default.func
};

exports.default = Web3Provider;
var withWeb3 = exports.withWeb3 = function withWeb3(WrappedComponent) {
  var Web3Consumer = function (_React$Component2) {
    _inherits(Web3Consumer, _React$Component2);

    function Web3Consumer() {
      _classCallCheck(this, Web3Consumer);

      return _possibleConstructorReturn(this, (Web3Consumer.__proto__ || Object.getPrototypeOf(Web3Consumer)).apply(this, arguments));
    }

    _createClass(Web3Consumer, [{
      key: 'render',
      // eslint-disable-line
      value: function render() {
        var _this6 = this;

        return _react2.default.createElement(
          Web3Context.Consumer,
          null,
          function (context) {
            return _react2.default.createElement(WrappedComponent, _extends({}, _this6.props, {
              web3: context.web3,
              web3State: context.connection
            }));
          }
        );
      }
    }]);

    return Web3Consumer;
  }(_react2.default.Component);

  if (WrappedComponent.defaultProps) {
    Web3Consumer.defaultProps = _extends({}, WrappedComponent.defaultProps);
  }

  return (0, _hoistNonReactStatics2.default)(Web3Consumer, WrappedComponent);
};