{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\ngmi\\\\app\\\\src\\\\components\\\\WhitePaper\\\\WhitePaper.js\";\nimport './WhitePaper.css';\n\nfunction WhitePaper(props) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(\"Confirm address:\" + props.accounts[0]);\n    props.addressReceipt(props.accounts[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quick-intro\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Replatform Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" Total minted: \", props.supply, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Below is a faucet for Replatform Token (symbol: NGMI). In the event that our favorite forums, boards, or communities in-general are shut-down, having this token in your wallet will allow us to find each other. Due to recent events, I am releasing this faucet before the app is complete. Just copy/paste your address, and the faucet will mint a single token for you for free (exluding gas prices). I think there is enough time left for completion of the app without too much worry. But better safe than sorry... I will release a whitepaper when I get a chance, but the goals of the project are as follows:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"ERC721 that can be requested for specific communities.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"ERC721 creates owner for community ERC20 contract. Owner can then distribute ERC20 to respective community.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Replatform Token will then ping requested forums and boards continuously, and an algorithm(most likely an oracle) will determine if that address still exists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"If the algorithm determines that the address no longer exists, it will fire up a new address with features similar to the 404'd address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The faucet for that 404'd address token will pause all further minting so no one new may enter the community for a time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"For a period of time determined by a specific community, the only way onto the new platform will be to verify identity with Deplatformed Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please note: the contract will only permit 1 token per wallet, so please dont waste your gas fees requesting more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"If you would like to donate to the project, send ether to this address 0x9A5963174dD8f36Db69b81E5E70C81bDFd9fcc74\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"If you would like to help with the project, add me on github at trismegistus-root\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"faucet\",\n        id: \"caption\",\n        children: \"Connect your wallet and press submit: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"faucet\",\n        onClick: handleSubmit,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_c = WhitePaper;\nexport default WhitePaper;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhitePaper\");","map":{"version":3,"sources":["C:/ngmi/app/src/components/WhitePaper/WhitePaper.js"],"names":["WhitePaper","props","handleSubmit","e","preventDefault","alert","accounts","addressReceipt","supply"],"mappings":";;AACA,OAAO,kBAAP;;AAEA,SAASA,UAAT,CAAqBC,KAArB,EAA2B;AAC1B,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,qBAAqBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAtB,CAAL;AACAL,IAAAA,KAAK,CAACM,cAAN,CAAqBN,KAAK,CAACK,QAAN,CAAe,CAAf,CAArB;AACC,GAJF;;AAOE,sBACQ;AAAA,2BACP;AAAK,MAAA,EAAE,EAAG,aAAV;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,oBAC0B;AAAA,sCAAoBL,KAAK,CAACO,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAD1B,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eASA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA,eAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBA,eAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBA,eAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBA,eAoBA;AAAO,QAAA,GAAG,EAAC,QAAX;AAAoB,QAAA,EAAE,EAAG,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBA,eAqBC;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAwB,QAAA,OAAO,EAAEN,YAAjC;AAA+C,QAAA,IAAI,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,UADR;AA8BF;;KAtCQF,U;AAwCT,eAAeA,UAAf","sourcesContent":["\r\nimport './WhitePaper.css';\r\n\r\nfunction WhitePaper (props){\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\talert(\"Confirm address:\" + props.accounts[0]);\r\n\t\tprops.addressReceipt(props.accounts[0]);\r\n  };\r\n\r\n\t\r\n\t  return (\r\n           <div>\r\n\t\t\t\t<div id = \"quick-intro\">\r\n\t\t\t\t<h1>Replatform Token</h1> <h3> Total minted: {props.supply} </h3>\r\n\t\t\t\t<p>Below is a faucet for Replatform Token (symbol: NGMI).\r\n\t\t\t\tIn the event that our favorite forums, boards, or communities in-general are shut-down,\r\n\t\t\t\thaving this token in your wallet will allow us to find each other. \r\n\t\t\t\tDue to recent events, I am releasing this faucet before the app is complete. \r\n\t\t\t\tJust copy/paste your address, and the faucet will mint a single token for you for free (exluding gas prices). \r\n\t\t\t\tI think there is enough time left for completion of the app without too much worry. But better safe than sorry...\r\n\t\t\t\tI will release a whitepaper when I get a chance, but the goals of the project are as follows:</p>\r\n\t\t\t\t<ol>\r\n\t\t\t\t<li>ERC721 that can be requested for specific communities.</li>\r\n\t\t\t\t<li>ERC721 creates owner for community ERC20 contract. Owner can then distribute ERC20 to respective community.</li>\r\n\t\t\t\t<li>Replatform Token will then ping requested forums and boards continuously, and an algorithm(most likely an oracle) will determine if that address still exists</li>\r\n\t\t\t\t<li>If the algorithm determines that the address no longer exists, it will fire up a new address with features similar to the 404'd address</li>\r\n\t\t\t\t<li>The faucet for that 404'd address token will pause all further minting so no one new may enter the community for a time</li>\r\n\t\t\t\t<li>For a period of time determined by a specific community, the only way onto the new platform will be to verify identity with Deplatformed Token</li>\r\n\t\t\t\t</ol>\r\n\t\t\t\t<p>Please note: the contract will only permit 1 token per wallet, so please dont waste your gas fees requesting more</p>\r\n\t\t\t\t<p>If you would like to donate to the project, send ether to this address 0x9A5963174dD8f36Db69b81E5E70C81bDFd9fcc74</p>\r\n\t\t\t\t<p>If you would like to help with the project, add me on github at trismegistus-root</p>\r\n\t\t\t\t<label for=\"faucet\" id = \"caption\">Connect your wallet and press submit: </label>\r\n\t\t\t\t\t<button name = \"faucet\" onClick={handleSubmit} type=\"submit\">\r\n\t\t\t\t\t  Submit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t   </div>\r\n          )\r\n\t\r\n}\r\n\r\nexport default WhitePaper;"]},"metadata":{},"sourceType":"module"}